mod display;
mod restorable_serde;

#[cfg(feature = "serde")]
use serde::{Deserialize, Serialize};

use super::{Department, Id};

/// A person who has been employed by the [`Organization`][organization] which uses
/// Winvoice.
///
/// The [`Organization`][organization] that the [`Employee`] works for is not stored in the entity,
/// as the [`Organization`][organization] using Winvoice is configured elsewhere and referenced as
/// necessary.
///
/// [organization]: super::Organization
#[cfg_attr(feature = "serde", derive(Deserialize, Serialize))]
#[derive(Clone, Default, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
pub struct Employee
{
	/// If `true`, this [`Employee`] is currently working for the host
	/// [`Organization`](super::Organization).
	pub active: bool,

	/// The place in the company where this [`Employee`] works, e.g. "Sales", "IT"
	pub department: Department,

	/// The reference number of this [`Employee`], which is unique among all [`Employee`]s.
	///
	/// Should be generated by a database, and never altered once assigned.
	pub id: Id,

	/// The name of the [`Employee`].
	pub name: String,

	/// The [`Employee`]'s title in the company, e.g. "CEO" or "Media Manager".
	pub title: String,
}
